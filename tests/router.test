package require tcltest
namespace import tcltest::*

apply {{} {
  set thisScriptDir [file dirname [info script]]
  set moduleDir [file normalize [file join $thisScriptDir ..]]
  set modules [lsort -decreasing [glob -directory $moduleDir gophser-*.tm]]
  source [lindex $modules 0]
  source [file join $thisScriptDir test_helpers.tcl]
  TestHelpers::setRepoRootDir $moduleDir
}}


set testFilesFn {{request} {testFiles}}
set testFilesSlashFn {{request} {testFilesSlash}}
set testFilesSplatFn {{request} {testFilesSplat}}
set testEmptyFn {{request} {testEmpty}}
set testRootFn {{request} {testRoot}}
set testDirFilenameFn {{request} {testDirFilename}}
set testServeURLFn {{request} {testServeURL}}


# Create the routes to test against
gophser::router::route "/files" {} $testFilesFn
gophser::router::route "/files/" {} $testFilesSlashFn
gophser::router::route "/files/*" {} $testFilesSplatFn
gophser::router::route "" {} $testEmptyFn
gophser::router::route "/" {} $testRootFn
gophser::router::route "/*/*" {} $testDirFilenameFn
gophser::router::route "URL:*" {} $testServeURLFn


test getHandler-1 {Return false if route not found} \
-setup {
  set selector "bob"
} -body {
  gophser::router::getHandler $selector
} -result {}


test getHandler-2 {Detect an empty pattern} \
-setup {
  set selector ""
} -body {
  gophser::router::getHandler $selector
} -result [list {} $testEmptyFn]


test getHandler-3 {Detect an empty pattern for the root with a trailing slash} \
-setup {
  set selector {/}
} -body {
  gophser::router::getHandler $selector
} -result [list {} $testRootFn]


test getHandler-4 {Detect a single splat on its own} \
-setup {
  set selector {/files/fred.txt}
} -body {
  gophser::router::getHandler $selector
} -result [list {} $testFilesSplatFn]


test getHandler-5 {Detect a single splat on its own against multiple sub-directories} \
-setup {
  set selector {/files/something/bob.txt}
} -body {
  gophser::router::getHandler $selector
} -result [list {} $testFilesSplatFn]


test getHandler-6 {Detect named parameters} \
-setup {
  set selector {/dirA/someFile.txt}
} -body {
  gophser::router::getHandler $selector
} -result [list {} $testDirFilenameFn]


test getHandler-7 {Detect exact path} \
-setup {
  set selector {/files}
} -body {
  gophser::router::getHandler $selector
} -result [list {} $testFilesFn]


test getHandler-8 {Detect exact path with trailing slash} \
-setup {
  set selector {/files/}
} -body {
  gophser::router::getHandler $selector
} -result [list {} $testFilesSlashFn]


test getHandler-9 {Check non standard path used with URL: prefix} \
-setup {
  set selectors {
    {URL:https://example.com/blog}
    {URL: https://example.com/blog}
  }
} -body {
  lmap selector $selectors {
    gophser::router::getHandler $selector
  }
} -result [list [list {} $testServeURLFn] [list {} $testServeURLFn]]


cleanupTests
