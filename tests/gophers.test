package require tcltest
namespace import tcltest::*

source [file join [file dirname [info script]] test_helpers.tcl]
TestHelpers::setRepoRootDir {..}
source [file join [TestHelpers::getRepoRootDir] gophers.tcl]


#TODO: Test thoroughly selector input using different line endings
#TODO: to make sure correct translation options are being used


test init-1 {Check can read menu from server when no gophermap} \
-setup {
  set configScript {
    gophers::log suppress all
    gophers::mount [file normalize $repoRootDir] "/"
  }
  set serverThread [TestHelpers::startServer $configScript]
} -body {
  TestHelpers::gopherGet localhost 7070 "/tests/"
} -cleanup {
  TestHelpers::shutdownServer $serverThread]
} -result [string cat \
  "0all.tcl\t/tests/all.tcl\tlocalhost\t7070\r\n" \
  "1fixtures\t/tests/fixtures\tlocalhost\t7070\r\n" \
  "0gophers.test\t/tests/gophers.test\tlocalhost\t7070\r\n" \
  "0menu.test\t/tests/menu.test\tlocalhost\t7070\r\n" \
  "0router.test\t/tests/router.test\tlocalhost\t7070\r\n" \
  "1stress\t/tests/stress\tlocalhost\t7070\r\n" \
  "0test_helpers.tcl\t/tests/test_helpers.tcl\tlocalhost\t7070\r\n" \
  ".\r\n"]


test init-2 {Check gophermap is processed in a directory} \
-setup {
  set configScript {
    gophers::log suppress all
    gophers::mount [file normalize $repoRootDir] "/"
  }
  set serverThread [TestHelpers::startServer $configScript]
} -body {
  TestHelpers::gopherGet localhost 7070 "/tests/fixtures/"
} -cleanup {
  TestHelpers::shutdownServer $serverThread]
} -result [string cat \
  "0README.md - find all about this directory\tREADME.md\tlocalhost\t7070\r\n" \
  "0README.md\t/tests/fixtures/README.md\tlocalhost\t7070\r\n" \
  "i\tFAKE\tlocalhost\t7070\r\n" \
  "0docs.txt\t/tests/fixtures/docs.txt\tlocalhost\t7070\r\n" \
  "iDid you know that there is some interesting information in some documentation\tFAKE\tlocalhost\t7070\r\n" \
  "i\tFAKE\tlocalhost\t7070\r\n" \
  "0hello.txt\t/tests/fixtures/hello.txt\tlocalhost\t7070\r\n" \
  "iThis is a description of hi.txt it is generated using the describe command and\tFAKE\tlocalhost\t7070\r\n" \
  "ithis demonstrates how it will wrap the text\tFAKE\tlocalhost\t7070\r\n" \
  "i\tFAKE\tlocalhost\t7070\r\n" \
  "0hi.txt\t/tests/fixtures/hi.txt\tlocalhost\t7070\r\n" \
  ".\r\n"]


test init-3 {Check can mount somewhere other than root} \
-setup {
  set configScript {
    gophers::log suppress all
    gophers::mount [file normalize $repoRootDir] "/bob"
  }
  set serverThread [TestHelpers::startServer $configScript]
} -body {
  TestHelpers::gopherGet localhost 7070 "/bob/tests/"
} -cleanup {
  TestHelpers::shutdownServer $serverThread]
} -result [string cat \
  "0all.tcl\t/bob/tests/all.tcl\tlocalhost\t7070\r\n" \
  "1fixtures\t/bob/tests/fixtures\tlocalhost\t7070\r\n" \
  "0gophers.test\t/bob/tests/gophers.test\tlocalhost\t7070\r\n" \
  "0menu.test\t/bob/tests/menu.test\tlocalhost\t7070\r\n" \
  "0router.test\t/bob/tests/router.test\tlocalhost\t7070\r\n" \
  "1stress\t/bob/tests/stress\tlocalhost\t7070\r\n" \
  "0test_helpers.tcl\t/bob/tests/test_helpers.tcl\tlocalhost\t7070\r\n" \
  ".\r\n"]


test mount-1 {Returns error if localDir is a relative path} \
-body {
  gophers::mount "fred/bob" "/"
} -returnCodes {error} -result {can not mount relative directories: fred/bob}


test mount-2 {Returns error if localDir is empty} \
-body {
  gophers::mount "" "/"
} -returnCodes {error} -result {local dir blank}


test mount-3 {Returns error if wildcards in selector} \
-setup {
  set selectors {
    "/bob/*"
    "/bob/*/fred/"
    "/bob/?"
    "/bob\[a-Z\]/"
  }
} -body {
  lmap selector $selectors {
    catch {gophers::mount "/" $selector} res options
    list [dict get $options -code] $res
  }
} -result [list [list 1 "selector can not contain wildcards"] \
                [list 1 "selector can not contain wildcards"] \
                [list 1 "selector can not contain wildcards"] \
                [list 1 "selector can not contain wildcards"]]


test mount-4 {Returns error if localDir doesn't exist} \
-body {
  gophers::mount [file join [TestHelpers::getRepoRootDir] unknown] "/"
} -returnCodes {error} -result "local directory doesn't exist: [file join [TestHelpers::getRepoRootDir] unknown]"


test mount-5 {Returns error if localDir isn't a directory} \
-body {
  gophers::mount [file join [TestHelpers::getRepoRootDir] gophers.tcl] "/"
} -returnCodes {error} -result "local directory isn't a directory: [file join [TestHelpers::getRepoRootDir] gophers.tcl]"


cleanupTests
